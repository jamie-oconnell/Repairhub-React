[{"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Customers.tsx":"1","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\table\\Head.tsx":"2","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\table\\Body.tsx":"3","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\table\\Row.tsx":"4","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Customer.tsx":"5","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Button.tsx":"6","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\accessToken.ts":"7","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\CreateCustomer.tsx":"8","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Tab.tsx":"9","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Error.tsx":"10","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\reportWebVitals.ts":"11","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\Routes.tsx":"12","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Image.tsx":"13","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\index.tsx":"14","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Checkbox.tsx":"15","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\layout\\LayoutWithSidebar.tsx":"16","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\assets\\iconsLib.ts":"17","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\hooks\\router.ts":"18","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\layout\\drawer\\Menu.tsx":"19","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\TextInput.tsx":"20","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Login.tsx":"21","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\generated\\graphql.tsx":"22","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Dashboard.tsx":"23","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Badge.tsx":"24","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\table\\Cell.tsx":"25","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\TabPane.tsx":"26","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\table\\index.tsx":"27","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Icon.tsx":"28","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Divider.tsx":"29","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\layout\\PageHeader.tsx":"30","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\table\\Header.tsx":"31","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\layout\\drawer\\index.tsx":"32","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\App.tsx":"33","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\layout\\drawer\\Items.ts":"34","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\table\\Table.tsx":"35","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Pagination.tsx":"36","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\layout\\drawer\\Footer.tsx":"37","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Tabs.tsx":"38","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Textarea.tsx":"39","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\layout\\drawer\\Header.tsx":"40","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\dashboard\\Widget.tsx":"41","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\AddressAutocomplete.tsx":"42","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Settings.tsx":"43","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\SettingsWidget.tsx":"44","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\statics.ts":"45","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\tables\\Table.tsx":"46","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Tickets.tsx":"47","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\CreateTicket.tsx":"48","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Ticket.tsx":"49","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Devices.tsx":"50","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\CreateDevice.tsx":"51","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Device.tsx":"52","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\context\\auth.tsx":"53","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\routes\\ProtectedRoute.tsx":"54","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\history.ts":"55","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\ClearAuth.tsx":"56"},{"size":4171,"mtime":1610217287391,"results":"57","hashOfConfig":"58"},{"size":157,"mtime":1609140411283,"results":"59","hashOfConfig":"58"},{"size":206,"mtime":1609140469225,"results":"60","hashOfConfig":"58"},{"size":348,"mtime":1609143853349,"results":"61","hashOfConfig":"58"},{"size":6541,"mtime":1610262523913,"results":"62","hashOfConfig":"58"},{"size":2372,"mtime":1609479076534,"results":"63","hashOfConfig":"58"},{"size":182,"mtime":1610085287142,"results":"64","hashOfConfig":"58"},{"size":6085,"mtime":1609602541497,"results":"65","hashOfConfig":"58"},{"size":607,"mtime":1608457320301,"results":"66","hashOfConfig":"58"},{"size":164,"mtime":1609427812578,"results":"67","hashOfConfig":"58"},{"size":425,"mtime":1606379505495,"results":"68","hashOfConfig":"58"},{"size":2011,"mtime":1610262347874,"results":"69","hashOfConfig":"58"},{"size":296,"mtime":1607227747906,"results":"70","hashOfConfig":"58"},{"size":3060,"mtime":1610256777653,"results":"71","hashOfConfig":"58"},{"size":607,"mtime":1609139363489,"results":"72","hashOfConfig":"58"},{"size":602,"mtime":1609480635759,"results":"73","hashOfConfig":"58"},{"size":12110,"mtime":1609478635577,"results":"74","hashOfConfig":"58"},{"size":1262,"mtime":1607158933671,"results":"75","hashOfConfig":"58"},{"size":1904,"mtime":1609502384024,"results":"76","hashOfConfig":"58"},{"size":1264,"mtime":1609592881410,"results":"77","hashOfConfig":"58"},{"size":2821,"mtime":1610084784039,"results":"78","hashOfConfig":"58"},{"size":14930,"mtime":1610258850694,"results":"79","hashOfConfig":"58"},{"size":2132,"mtime":1610178713462,"results":"80","hashOfConfig":"58"},{"size":690,"mtime":1610217364013,"results":"81","hashOfConfig":"58"},{"size":221,"mtime":1609140442653,"results":"82","hashOfConfig":"58"},{"size":228,"mtime":1607273343175,"results":"83","hashOfConfig":"58"},{"size":224,"mtime":1606529176672,"results":"84","hashOfConfig":"58"},{"size":908,"mtime":1609427695948,"results":"85","hashOfConfig":"58"},{"size":152,"mtime":1607158933669,"results":"86","hashOfConfig":"58"},{"size":372,"mtime":1606399244711,"results":"87","hashOfConfig":"58"},{"size":289,"mtime":1609140283519,"results":"88","hashOfConfig":"58"},{"size":844,"mtime":1609949822604,"results":"89","hashOfConfig":"58"},{"size":2373,"mtime":1610260407992,"results":"90","hashOfConfig":"58"},{"size":1037,"mtime":1608996176082,"results":"91","hashOfConfig":"58"},{"size":227,"mtime":1609140922131,"results":"92","hashOfConfig":"58"},{"size":1039,"mtime":1610217176482,"results":"93","hashOfConfig":"58"},{"size":839,"mtime":1609949831533,"results":"94","hashOfConfig":"58"},{"size":266,"mtime":1609427717055,"results":"95","hashOfConfig":"58"},{"size":592,"mtime":1609603211371,"results":"96","hashOfConfig":"58"},{"size":897,"mtime":1609480588647,"results":"97","hashOfConfig":"58"},{"size":460,"mtime":1610176194725,"results":"98","hashOfConfig":"58"},{"size":2171,"mtime":1609409297134,"results":"99","hashOfConfig":"58"},{"size":1037,"mtime":1609557817051,"results":"100","hashOfConfig":"58"},{"size":586,"mtime":1609517272283,"results":"101","hashOfConfig":"58"},{"size":442,"mtime":1609554328463,"results":"102","hashOfConfig":"58"},{"size":4703,"mtime":1610217331884,"results":"103","hashOfConfig":"58"},{"size":433,"mtime":1609516002655,"results":"104","hashOfConfig":"58"},{"size":181,"mtime":1609746287711,"results":"105","hashOfConfig":"58"},{"size":167,"mtime":1609746312823,"results":"106","hashOfConfig":"58"},{"size":170,"mtime":1609746300581,"results":"107","hashOfConfig":"58"},{"size":181,"mtime":1609746280372,"results":"108","hashOfConfig":"58"},{"size":167,"mtime":1609746294804,"results":"109","hashOfConfig":"58"},{"size":1728,"mtime":1610257971694,"results":"110","hashOfConfig":"58"},{"size":1505,"mtime":1610262188149,"results":"111","hashOfConfig":"58"},{"size":91,"mtime":1610256608247,"results":"112","hashOfConfig":"58"},{"size":406,"mtime":1610257851796,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},"y03p4o",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"117"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"117"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"117"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"117"},"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Customers.tsx",["232","233"],"import React from \"react\";\r\nimport PageHeader from \"../components/layout/PageHeader\";\r\nimport Button from \"../components/ui/Button\";\r\nimport TextInput from \"../components/ui/TextInput\";\r\nimport CustomersTable from \"../components/tables/Table\";\r\nimport useRouter from \"../hooks/router\";\r\nimport Checkbox from \"../components/ui/Checkbox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useGetCustomersTableLazyQuery } from \"../generated/graphql\";\r\nimport Pagination from \"../components/ui/Pagination\";\r\nimport { useDebounce } from \"react-use\";\r\n\r\ninterface Props {}\r\n\r\nconst Customers = (props: Props) => {\r\n  const router = useRouter();\r\n  const [getCustomers, { loading, data }] = useGetCustomersTableLazyQuery({\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n  const [controlledPageIndex, setControlledPage] = React.useState(0);\r\n  const [searchText, setSearchText] = React.useState(\"\");\r\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\r\n  const [after, setAfter] = React.useState<string | undefined>();\r\n  const [before, setBefore] = React.useState<string | undefined>();\r\n  const tableData = data?.customers.edges.map((edge) => {\r\n    return {\r\n      ...edge?.node,\r\n    };\r\n  });\r\n\r\n  const pageData = data?.customers.pageInfo;\r\n\r\n  useDebounce(\r\n    () => {\r\n      setSearchQuery(searchText);\r\n    },\r\n    250,\r\n    [searchText]\r\n  );\r\n\r\n  const useControlledState = (state: any) => {\r\n    return React.useMemo(\r\n      () => ({\r\n        ...state,\r\n        pageIndex: controlledPageIndex,\r\n      }),\r\n      [state]\r\n    );\r\n  };\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Customer Name\",\r\n        accessor: \"name\", // accessor is the \"key\" in the data\r\n        Cell: ({ row, cell }: any) => (\r\n          <>\r\n            <Checkbox {...row.getToggleRowSelectedProps()} />\r\n            <Link\r\n              to={`/customers/view/${row.original.id}`}\r\n              className=\"ml-4 text-oceanBlue\"\r\n            >\r\n              {cell.value}\r\n            </Link>\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        Header: \"Phone\",\r\n        accessor: \"phoneNumber\",\r\n        disableSortBy: true,\r\n      },\r\n      {\r\n        Header: \"Email\",\r\n        accessor: \"email\",\r\n      },\r\n      {\r\n        Header: \"Ticket Status\",\r\n        accessor: \"ticket_status\",\r\n      },\r\n      {\r\n        Header: \"Last Ticket Created\",\r\n        accessor: \"last_ticket_created\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        <span className=\"textstyle-header flex-1\">Customers</span>\r\n        <Button variant=\"secondary\">Import Customers</Button>\r\n        <Button\r\n          onClick={(e) => router.push(\"/customers/create\")}\r\n          variant=\"primary\"\r\n          className=\"ml-2\"\r\n        >\r\n          Create Customer\r\n        </Button>\r\n      </PageHeader>\r\n      <PageHeader>\r\n        <div className=\"flex-1 flex\">\r\n          <TextInput\r\n            className=\"w-searchBar\"\r\n            icon=\"search\"\r\n            placeholder=\"Search customer\"\r\n            value={searchText}\r\n            onChange={({ currentTarget }) => {\r\n              setSearchText(currentTarget.value);\r\n            }}\r\n          ></TextInput>\r\n          <Button className=\"ml-2\" variant=\"secondary\">\r\n            Filters\r\n          </Button>\r\n        </div>\r\n        <Pagination\r\n          firstValue={1}\r\n          lastValue={20}\r\n          total={data?.customers.totalCount}\r\n          canNextPage={pageData?.hasNextPage}\r\n          canPreviousPage={pageData?.hasPreviousPage}\r\n          onPageForward={() => {setAfter(pageData?.endCursor)}}\r\n          onPageBack={() => {setBefore(pageData?.startCursor)}}\r\n        />\r\n      </PageHeader>\r\n      <div className=\"w-full px-8 py-8 flex justify-center\">\r\n        <div className=\"container\">\r\n          <CustomersTable\r\n            pageCount={10}\r\n            columns={columns}\r\n            data={tableData}\r\n            onFetchData={getCustomers}\r\n            useControlledState={useControlledState}\r\n            search={searchQuery}\r\n            after={after}\r\n            before={before}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n",["234","235"],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\table\\Head.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\table\\Body.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\table\\Row.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Customer.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Button.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\accessToken.ts",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\CreateCustomer.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Tab.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Error.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\Routes.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Image.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\index.tsx",["236"],"import React from \"react\";\r\nimport { Router } from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\nimport history from \"./history\";\r\nimport App from \"./App\";\r\nimport \"./assets/main.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { getAccessToken, setAccessToken } from \"./accessToken\";\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n  from,\r\n} from \"@apollo/client\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\nimport { AuthProvider } from \"./context/auth\";\r\nimport { TokenRefreshLink } from \"apollo-link-token-refresh\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport \"focus-visible\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"https://dev.repairhub.io/graphql\",\r\n  credentials: \"include\",\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = getAccessToken();\r\n\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      \"x-access-token\": `Bearer ${token && token}`,\r\n    },\r\n  };\r\n});\r\n\r\nconst tokenRefreshLink = new TokenRefreshLink({\r\n  accessTokenField: \"accessToken\",\r\n  isTokenValidOrUndefined: () => {\r\n    const token = getAccessToken();\r\n\r\n    if (!token) {\r\n      return true;\r\n    }\r\n\r\n    try {\r\n      const { exp }: any = jwtDecode(token);\r\n\r\n      if (Date.now() >= exp * 1000) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Error here...\");\r\n      return false;\r\n    }\r\n  },\r\n  fetchAccessToken: async () => {\r\n    const res = await fetch(\"https://dev.repairhub.io/refresh_token\", {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n    });\r\n    const { accessToken } = await res.json();\r\n    return accessToken;\r\n  },\r\n  handleFetch: (accessToken) => {\r\n    setAccessToken(accessToken);\r\n  },\r\n  handleError: (err) => {\r\n    console.warn(\"Your refresh token is invalid. Try to relogin\");\r\n    console.log(err);\r\n  },\r\n});\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors)\r\n    graphQLErrors.map(({ message, locations, path }) => {\r\n      if (message === \"Unauthenticated!\") {\r\n        history.push(\"/auth/clear\");\r\n      }\r\n      console.log(\r\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\r\n      );\r\n    });\r\n  if (networkError) console.log(`[Network error]: ${networkError}`);\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: from([tokenRefreshLink, authLink, errorLink, httpLink]),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <AuthProvider>\r\n        <Router history={history}>\r\n          <App />\r\n        </Router>\r\n      </AuthProvider>\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Checkbox.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\layout\\LayoutWithSidebar.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\assets\\iconsLib.ts",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\hooks\\router.ts",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\layout\\drawer\\Menu.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\TextInput.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Login.tsx",["237"],"import * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport Button from \"../components/ui/Button\";\r\nimport TextInput from \"../components/ui/TextInput\";\r\nimport { useLoginMutation } from \"../generated/graphql\";\r\nimport { setAccessToken } from \"../accessToken\";\r\nimport useRouter from \"../hooks/router\";\r\nimport _ from \"lodash\";\r\n\r\nimport { useAuthDispatch, useAuthState } from \"../context/auth\";\r\n\r\ninterface Props {}\r\n\r\nconst validationSchema = yup.object().shape({\r\n  username: yup.string(),\r\n  password: yup.string(),\r\n});\r\n\r\nconst Login = (props: Props) => {\r\n  const router = useRouter();\r\n  const [login, { error }] = useLoginMutation();\r\n  const dispatch = useAuthDispatch();\r\n  const { authenticated } = useAuthState();\r\n  let { from }: any = router.location.state || { from: { pathname: \"/\" } };\r\n\r\n  if (authenticated) {\r\n    router.push(\"/\");\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async ({ username, password }) => {\r\n      const response = await login({\r\n        variables: {\r\n          username,\r\n          password,\r\n        },\r\n      });\r\n\r\n      if (response?.data) {\r\n        //@ts-ignore\r\n        setAccessToken(response?.data?.loginUser.accessToken);\r\n      }\r\n\r\n      dispatch(\"LOGIN\", _.omit(response.data?.loginUser, [\"accessToken\"]));\r\n\r\n      router.push(from);\r\n    },\r\n  });\r\n  return (\r\n    <div className=\"h-screen bg-white grid grid-cols-2\">\r\n      <div></div>\r\n      <div className=\"flex justify-center items-center\">\r\n        <form\r\n          onSubmit={formik.handleSubmit}\r\n          className=\"w-full\"\r\n          style={{ maxWidth: \"420px\" }}\r\n        >\r\n          <span className=\"textstyle-header text-gray-100\">Sign In</span>\r\n          <div className=\"mt-8\">\r\n            <label htmlFor=\"username\" className=\"textstyle-body\">\r\n              Username\r\n            </label>\r\n            <TextInput\r\n              id=\"username\"\r\n              value={formik.values.username}\r\n              onChange={formik.handleChange}\r\n              className=\"mt-2\"\r\n              placeholder=\"Username\"\r\n            />\r\n          </div>\r\n          <div className=\"mt-8\">\r\n            <label htmlFor=\"password\" className=\"textstyle-body\">\r\n              Password\r\n            </label>\r\n            <TextInput\r\n              id=\"password\"\r\n              type=\"password\"\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              className=\"mt-2\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </div>\r\n          <Button variant=\"primary\" type=\"submit\" className=\"w-full mt-8\">\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\generated\\graphql.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Dashboard.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Badge.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\table\\Cell.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\TabPane.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\table\\index.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Icon.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Divider.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\layout\\PageHeader.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\table\\Header.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\layout\\drawer\\index.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\App.tsx",["238"],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\layout\\drawer\\Items.ts",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\table\\Table.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Pagination.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\layout\\drawer\\Footer.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Tabs.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\Textarea.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\layout\\drawer\\Header.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\dashboard\\Widget.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\AddressAutocomplete.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Settings.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\ui\\SettingsWidget.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\statics.ts",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\tables\\Table.tsx",["239","240"],"import React from \"react\";\r\nimport {\r\n  useTable,\r\n  Column,\r\n  useSortBy,\r\n  useRowSelect,\r\n  UseTableOptions,\r\n  TableState,\r\n} from \"react-table\";\r\nimport {\r\n  Table as TableUI,\r\n  Body as TableBodyUI,\r\n  Head as TableHeadUI,\r\n  Header as TableHeaderUI,\r\n  Cell as TableCellUI,\r\n  Row as TableRowUI,\r\n} from \"../ui/table\";\r\nimport Icon from \"../ui/Icon\";\r\n//@ts-ignore\r\nimport { Menu, MenuItem, MenuButton } from \"@szhsin/react-menu\";\r\n\r\ninterface TableProps {\r\n  columns: Column<object>[];\r\n  data: any[] | null | undefined;\r\n  onFetchData: Function;\r\n  useControlledState: any;\r\n  pagination?: boolean;\r\n  loading?: boolean;\r\n  pageCount: number;\r\n  search: string;\r\n  pageData?: PageData\r\n  after: string | undefined;\r\n  before: string | undefined;\r\n}\r\n\r\ntype PageData = {\r\n    endCursor: string;\r\n    startCursor: string;\r\n    hasNextPage: string;\r\n    hasPreviousPage: string;\r\n}\r\n\r\nconst Table: React.FC<TableProps> = (props: TableProps): React.ReactElement => {\r\n  const { columns, data, onFetchData, useControlledState, search, after, before } = props;\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    rows,\r\n    selectedFlatRows,\r\n    state: { selectedRowIds, sortBy, pageIndex, pageSize=5 },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data: data || [],\r\n      manualSortBy: true,\r\n      autoResetSortBy: false,\r\n      disableMultiSort: true,\r\n      useControlledState,\r\n    },\r\n    useSortBy,\r\n    (hooks) => {\r\n      hooks.visibleColumns.push((columns) => [\r\n        // Let's make a column for options\r\n        ...columns,\r\n        {\r\n          id: \"_options\",\r\n          // The cell can use the individual row's getToggleRowSelectedProps method\r\n          // to the render a checkbox\r\n          Cell: () => {\r\n            return (\r\n              <Menu\r\n                menuButton={\r\n                  <MenuButton>\r\n                    <Icon icon=\"more\" />\r\n                  </MenuButton>\r\n                }\r\n              >\r\n                <MenuItem>New Ticket</MenuItem>\r\n                <MenuItem>New Device</MenuItem>\r\n                <MenuItem>Delete</MenuItem>\r\n              </Menu>\r\n            );\r\n          },\r\n        },\r\n      ]);\r\n    },\r\n    useRowSelect\r\n  );\r\n\r\n  // Update data on table state change\r\n  React.useEffect(() => {\r\n    let sortDirection = \"ASC\";\r\n    if (sortBy.length > 0 && sortBy[0].desc === true) {\r\n      sortDirection = \"DESC\";\r\n    }\r\n    onFetchData({ variables: { pageIndex, pageSize, sortDirection, search, after, before} });\r\n  }, [onFetchData, pageIndex, pageSize, sortBy, search, after, before]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <TableUI {...getTableProps()}>\r\n        <TableHeadUI>\r\n          {headerGroups.map((headerGroup) => (\r\n            <TableRowUI\r\n              {...headerGroup.getHeaderGroupProps()}\r\n              key={String(headerGroup.id)}\r\n            >\r\n              {headerGroup.headers.map((column) => (\r\n                <TableHeaderUI\r\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  key={String(column.id)}\r\n                >\r\n                  <span>{column.render(\"Header\")}</span>\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \" 🔽\"\r\n                        : \" 🔼\"\r\n                      : \"\"}\r\n                  </span>\r\n                </TableHeaderUI>\r\n              ))}\r\n            </TableRowUI>\r\n          ))}\r\n        </TableHeadUI>\r\n        <TableBodyUI {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <TableRowUI {...row.getRowProps()} isSelected={row.isSelected}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <TableCellUI\r\n                      {...cell.getCellProps()}\r\n                      key={String(cell.column?.id)}\r\n                    >\r\n                      <span className=\"flex items-center\">\r\n                        {cell.render(\"Cell\")}\r\n                      </span>\r\n                    </TableCellUI>\r\n                  );\r\n                })}\r\n              </TableRowUI>\r\n            );\r\n          })}\r\n        </TableBodyUI>\r\n      </TableUI>\r\n      <pre>\r\n        <code>\r\n          {JSON.stringify(\r\n            {\r\n              selectedRowIds: selectedRowIds,\r\n              \"selectedFlatRows[].original\": selectedFlatRows.map(\r\n                (d) => d.original\r\n              ),\r\n            },\r\n            null,\r\n            2\r\n          )}\r\n        </code>\r\n      </pre>\r\n    </>\r\n  );\r\n};\r\n\r\nTable.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nexport default Table;\r\n","C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Tickets.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\CreateTicket.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Ticket.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Devices.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\CreateDevice.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\Device.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\context\\auth.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\components\\routes\\ProtectedRoute.tsx",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\history.ts",[],"C:\\Users\\jamie\\webdev\\Repairhub-React\\client\\src\\pages\\ClearAuth.tsx",["241"],"import { useEffect } from \"react\";\r\nimport { useAuthDispatch } from \"../context/auth\";\r\nimport useRouter from \"../hooks/router\";\r\ninterface Props {}\r\n\r\nconst ClearAuth = (props: Props) => {\r\n  const dispatch = useAuthDispatch();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    dispatch(\"LOGOUT\");\r\n    router.history.push(\"/login\");\r\n  }, []);\r\n  return <></>;\r\n};\r\n\r\nexport default ClearAuth;\r\n",{"ruleId":"242","severity":1,"message":"243","line":17,"column":26,"nodeType":"244","messageId":"245","endLine":17,"endColumn":33},{"ruleId":"242","severity":1,"message":"246","line":20,"column":31,"nodeType":"244","messageId":"245","endLine":20,"endColumn":48},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":80,"column":54,"nodeType":"253","messageId":"254","endLine":80,"endColumn":56},{"ruleId":"242","severity":1,"message":"255","line":21,"column":19,"nodeType":"244","messageId":"245","endLine":21,"endColumn":24},{"ruleId":"256","severity":1,"message":"257","line":48,"column":6,"nodeType":"258","endLine":48,"endColumn":8,"suggestions":"259"},{"ruleId":"242","severity":1,"message":"260","line":7,"column":3,"nodeType":"244","messageId":"245","endLine":7,"endColumn":18},{"ruleId":"242","severity":1,"message":"261","line":8,"column":3,"nodeType":"244","messageId":"245","endLine":8,"endColumn":13},{"ruleId":"256","severity":1,"message":"262","line":13,"column":6,"nodeType":"258","endLine":13,"endColumn":8,"suggestions":"263"},"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'setControlledPage' is assigned a value but never used.","no-native-reassign",["264"],"no-negated-in-lhs",["265"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'me'. Either include them or remove the dependency array.","ArrayExpression",["266"],"'UseTableOptions' is defined but never used.","'TableState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'router.history'. Either include them or remove the dependency array.",["267"],"no-global-assign","no-unsafe-negation",{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},"Update the dependencies array to be: [dispatch, me]",{"range":"272","text":"273"},"Update the dependencies array to be: [dispatch, router.history]",{"range":"274","text":"275"},[1507,1509],"[dispatch, me]",[350,352],"[dispatch, router.history]"]